/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.ORM.MySQL;

use Runtime.CoreDriver;
use Runtime.ORM.Exceptions.OrmException;
use Runtime.ORM.Cursor;
use Runtime.ORM.ProviderInterface;
use Runtime.ORM.MySQL.Connection;
use Runtime.ORM.MySQL.Provider;


class Driver extends CoreDriver
{
	
	protected Map connections;
	
	
	/**
	 * Constructor
	 */
	public void constructor()
	{
		parent();
		this.connections = new Map();
	}
	
	
	
	/**
	 * Start driver
	 */
	public async void startDriver()
	{
	}
	
	
	
	/**
	 * Connect to mysql
	 */
	public async var connect(Provider p)
	{
		string hash = p::getHash(p);
		
		if (this.connections.has(hash))
		{
			Connection conn = this.connections.item(hash);
			return conn;
		}
		
		Connection conn = await Connection::connect(p);
		this.connections.set(hash, conn);
		
		if (not conn.connected())
		{
			throw new OrmException(conn.last_error, conn.last_code);
		}
		
		return conn;
	}
	
}